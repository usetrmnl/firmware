; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = trmnl

[env:esp32_base]
framework = espidf, arduino
platform = espressif32@6.10.0
board_build.partitions = min_spiffs.csv
board_build.filesystem = spiffs
upload_speed = 460800
build_flags =
	-D CORE_DEBUG_LEVEL=0
lib_ldf_mode = deep
lib_deps =
	ESP32Async/ESPAsyncWebServer@3.7.1
	bblanchon/ArduinoJson@7.2.1
	https://github.com/thijse/Arduino-Log.git#3f4fcf5a345c1d542e56b88c0ffcb2bd2a5b0bd0
	bitbank2/PNGdec@1.1.2
debug_init_break = break setupy
build_type = debug
check_tool = clangtidy
check_flags =
	clangtidy: --checks=bugprone-*,portability-*,clang-analyzer-*,google-*,-google-readability-*
monitor_filters = esp32_exception_decoder
monitor_speed = 115200

[env:esp32-c3-devkitc-02]
extends = env:esp32_base
board = esp32-c3-devkitc-02
board_build.f_cpu = 80000000L
board_build.f_flash = 40000000L
board_build.flash_mode = qio
build_flags =
	${env:esp32_base.build_flags} ; Inherit base flags
	-D ARDUINO_USB_MODE=0
	-D ARDUINO_USB_CDC_ON_BOOT=0
debug_tool = esp-builtin

[env:esp32dev]
extends = env:esp32_base
board = esp32dev
board_build.f_cpu = 240000000L
board_build.f_flash = 80000000L ; Assuming 80MHz flash freq for generic ESP32, adjust if needed
board_build.flash_mode = dio    ; Common flash mode for ESP32dev

[env:waveshare-esp32-driver]
extends = env:esp32dev
build_flags =
	${env:esp32_base.build_flags}
	-D BOARD_WAVESHARE_ESP32_DRIVER

[env:trmnl]
extends = env:esp32-c3-devkitc-02
build_flags =
	${env:esp32_base.build_flags}
	-D BOARD_TRMNL

[env:local]
extends = env:esp32_base
platform = espressif32@6.10.0 # Specify platform for local env
board = esp32-c3-devkitc-02 # Specify board for local env (assuming C3 for local debugging)
build_flags =
	-D BOARD_TRMNL
	-D ARDUINO_USB_MODE=1
	-D ARDUINO_USB_CDC_ON_BOOT=1
	-D CORE_DEBUG_LEVEL=0
	-D WAIT_FOR_SERIAL=1
	-D ARDUINOJSON_ENABLE_ARDUINO_STRING=1
# lib_deps are inherited from esp32_base
# monitor_filters are inherited from esp32_base

[env:native]
platform = native
test_framework = unity
lib_deps =
	bblanchon/ArduinoJson@7.2.1
	fabiobatsilva/ArduinoFake@^0.4.0
	bitbank2/PNGdec@1.1.2
build_flags =
	-D ARDUINOJSON_ENABLE_ARDUINO_STRING=1
	-std=gnu++11
	# avoids errors about WProgram.h from ArduinoLog:
	-D ARDUINO=111
	# warnings from ArduinoFake w/ MacOS' g++:
	-Wno-missing-template-arg-list-after-template-kw
	# for linux:
	-include stdint.h
lib_compat_mode = off
monitor_filters = esp32_exception_decoder

[env:native-windows]
extends = env:native
build_flags =
	-std=gnu++11
	# avoids errors about WProgram.h from ArduinoLog:
	-D ARDUINO=111
	-include stdint.h
	# for pngdec:
	-Duint=uInt
